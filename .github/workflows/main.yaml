name: vprofile actions
'on': workflow_dispatch
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: prod/vprofile-git-ops
  EKS_CLUSTER: vprofile-eks-gitops
jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Maven test
        run: mvn test
      - name: Checkstyle
        run: 'mvn checkstyle:checkstyle'
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'
      - name: Setup SonarQube
        uses: warchant/setup-sonarqube@v7
      - name: SonarQube Scan
        run: |
          sonar-scanner \
            -Dsonar.host.url=${{ secrets.SONAR_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.sources=src/ \
            -Dsonar.junits.reportsPath=target/surefire-reports/ \
            -Dsonar.jacoco.reportPaths=target/jacoco.exec \
            -Dsonar.java.checkstyle.reportPaths=target/site/checkstyle-result.xml \
            -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/



BUILD_AND_PUBLISH:
    needs: Testing
    runs-on: ubuntu-latest
    outputs:
      task-definition: '${{ steps.task-def.outputs.task-definition }}'
    steps:
      - name: Code checkout
        uses: actions/checkout@v4
      - name: Build & Upload image to ECR
        uses: appleboy/docker-ecr-action@master
        with:
          access_key: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          secret_key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          registry: '${{ secrets.ECR_REPOSITORY }}'
          repo: actapp
          region: '${{ env.AWS_REGION }}'
          tags: 'latest,${{ github.run_number }}'
          daemon_off: false
          dockerfile: ./Dockerfile
          context: ./
